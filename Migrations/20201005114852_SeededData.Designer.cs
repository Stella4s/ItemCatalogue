// <auto-generated />
using ItemCatalogue.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ItemCatalogue.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20201005114852_SeededData")]
    partial class SeededData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ItemCatalogue.Models.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            Name = "Ingredients"
                        },
                        new
                        {
                            CategoryID = 2,
                            Name = "Potions"
                        },
                        new
                        {
                            CategoryID = 3,
                            Name = "Food"
                        });
                });

            modelBuilder.Entity("ItemCatalogue.Models.Item", b =>
                {
                    b.Property<int>("ItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quality")
                        .HasColumnType("int");

                    b.HasKey("ItemID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            ItemID = 1,
                            BasePrice = 4.50m,
                            CategoryID = 3,
                            Description = "A delicious fresh apple.",
                            Name = "Apple",
                            Price = 0m,
                            Quality = 0
                        },
                        new
                        {
                            ItemID = 2,
                            BasePrice = 23.00m,
                            CategoryID = 3,
                            Description = "A classic.",
                            Name = "ApplePie",
                            Price = 0m,
                            Quality = 0
                        },
                        new
                        {
                            ItemID = 3,
                            BasePrice = 2.30m,
                            CategoryID = 1,
                            Description = "Regular old flour.",
                            Name = "Flour",
                            Price = 0m,
                            Quality = 0
                        },
                        new
                        {
                            ItemID = 4,
                            BasePrice = 6.50m,
                            CategoryID = 1,
                            Description = "A fancy way of saying apple juice.",
                            Name = "Apple Extract",
                            Price = 0m,
                            Quality = 0
                        },
                        new
                        {
                            ItemID = 5,
                            BasePrice = 6.50m,
                            CategoryID = 2,
                            Description = "Good in a pinch.",
                            Name = "Health Potion",
                            Price = 0m,
                            Quality = 0
                        });
                });

            modelBuilder.Entity("ItemCatalogue.Models.Item", b =>
                {
                    b.HasOne("ItemCatalogue.Models.Category", "Category")
                        .WithMany("Items")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
